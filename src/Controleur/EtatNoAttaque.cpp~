/**
*Fichier EtatNoAttaque.cpp
* @author Pierre Gaultier & Theo Dolez
*/


#include <iostream>
#include <sstream> // pour les conversions en chaine
#include <typeinfo>

using namespace std; // seulement dans le .cpp !

/////////////////////////////////////////////////////////////////////////
/**
* Constructeur.
* @param j le jeu 
*/
EtatNoAttaque::EtatNoAttaque(Jeu* j)
{
	this->jeu = j;
}

/////////////////////////////////////////////////////////////////////////
/**
* Destructeur
*/
EtatNoAttaque::~EtatNoAttaque()
{
}

/////////////////////////////////////////////////////////////////////////
/**
* Methode qui renvoie le jeu
*@return jeu le jeu
*/
Jeu* EtatNoAttaque::getJeu()
{
  return this->jeu;  
}

/////////////////////////////////////////////////////////////////////////
/**
* Methode qui termine le tour en cours, et lance le suivant
*/
void EtatNoAttaque::finTour()
{
  jeu->setEtat(jeu->getEtatDebutTour());
  jeu->echangeJoueur();
  jeu->jouer();
}

/////////////////////////////////////////////////////////////////////////
int EtatNoAttaque::afficherChoixEtat()
int choix = -1;
	int choixcarte;
	int choixcarte1, choixcarte2;
	int pdmn = this->joueurCourant->getPersonnage().getPdm();
	jeu->vue.afficherChoixDebutTour();
	choix = jeu->vue.getChoixActionTour();
		switch (choix)
		{
		    case 1: {
					jeu->vue.afficherMain(joueurCourant);
					break;
		    }
		    case 2:  {
		   		jeu->vue.afficherJouerCarte();
		   		choixcarte = jeu->vue.getChoixCarteAJouer();
		   		if ( jeu->joueurCourant->getMain()->at(choixcarte-1).getCoutmana() <= pdmn)
		   		{
		   			jeu->joueurCourant->ajouterBoard(jeu->joueurCourant->getMain()->at(choixcarte-1));
		   			pdmn = pdmn - jeu->joueurCourant->getMain()->at(choixcarte-1).getCoutmana();
		   			jeu->vue.afficherPdmnRestant(pdmn);
		   		 	jeu->joueurCourant->supprimerMain(choixcarte);
		   		 	
		   		 	if (jeu->testNomana() == true )
		   		 	{
		   		 		jeu->setEtat(jeu->getEtatDoubleNo());
		   		 	}		   		 
		   		 	
		   		}else{
		   			
		   			jeu->vue.afficherPasAssezDeMana();
		      	}
		      break;
		    }
		    case 3: {	
				  jeu->vue.afficherBoard(joueurCourant);
				  break;
    		}
    		case 4:
    		{
					jeu->vue.afficher2Board(joueurCourant,joueurAutre);
    				break;
    		}
    		case 5:
    		{
					jeu->vue.afficherPersonnage(joueurCourant);
    				break;
    		}
    		case 6:
    		{
    			cout << "POUVOIR" << endl
    		}
    		
		}
	
	return choix;



}

